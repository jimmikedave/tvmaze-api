{"version":3,"sources":["App.js","index.js"],"names":["App","useState","filteredData","setFilteredData","searchValue","setSearchValue","show","setShow","showTitle","setShowTitle","updateShow","event","sum","showSelect","target","accessKey","newShow","filter","value","id","toString","summary","replace","title","name","useEffect","axios","get","then","response","newFilter","data","toLowerCase","includes","catch","error","console","log","className","type","placeholder","onChange","searchWord","length","onClick","map","dateFormat","premiered","rating","average","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb113e88.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\n\nimport './style.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport default function App() {\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [show, setShow] = useState(\"\");\n  const [showTitle, setShowTitle] = useState(\"\");\n\n  // update the search value onChange\n  const updateValue = (event) => {\n    const searchWord = event.target.value;\n    setSearchValue(searchWord);\n  }\n\n  // clear search query when x is clicked\n  const clearInput = () => {\n    setFilteredData([]);\n    setSearchValue(\"\");\n  }\n\n  // retrieve the selected show and update the show state to display\n  // the title and show description\n  const updateShow = (event) => {\n    const showSelect = event.target.accessKey;\n    const newShow = filteredData.filter((value) => {\n\n      if (value.show.id.toString() === showSelect) {\n        return value.show\n      }\n    });\n\n    // remove the html tags from the tvmaze string\n    const removeTags = (sum) => {\n      if ((sum === null) || (sum === ''))\n      return false;\n      else\n      return sum.replace( /(<([^>]+)>)/ig, '');\n    }\n    const summary = removeTags(newShow[0].show.summary);\n    const title = newShow[0].show.name;\n\n    setShowTitle(title);\n    setShow(summary);\n    setFilteredData([]);\n  }\n\n  useEffect(() => {\n\n    // call the api and filter through the results\n    const performSearch = () => {\n\n      // makes a call to the tvmaze api\n      axios.get('https://api.tvmaze.com/search/shows?q=' + searchValue)\n      .then(response => {\n        const show = response.data;\n\n        // filter through and return show names in the response that match the current input value\n        const newFilter = show.filter((value) => {\n          return value.show.name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n        \n        // set our filtered data if the string is not empty\n        if (searchValue === \"\") {\n          setFilteredData([]);\n        } else {\n          setFilteredData(newFilter);\n        }\n\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      })\n    };\n\n    performSearch()\n  }, [searchValue]);\n\n\n  return (\n    <div className=\"App\">\n      <h4 className=\"search-bar__title\">Search TV Show</h4>\n      <div className=\"search-bar\">\n        <div className=\"search-bar__input\">\n          <input \n            type=\"text\" \n            placeholder=\"Please enter TV show title\"\n            value={searchValue}\n            onChange={updateValue} />\n          <div className=\"search-bar__icon\">\n            {searchValue.length === 0 ? \n              <SearchIcon /> \n              : \n              <CloseIcon id=\"clearButton\" onClick={clearInput}/>\n            }\n          </div>\n        </div>\n        {filteredData.length !== 0 && (\n          <div className=\"search-bar__data\">\n            {filteredData.map((value) => {\n              return (\n                <li className=\"search-bar__button\" key={value.show.id} accessKey={value.show.id}>\n                  <button\n                    onClick={updateShow}\n                    accessKey={value.show.id}\n                  >\n                    <div className=\"search-bar__button--description\" accessKey={value.show.id}>\n                      <p accessKey={value.show.id}>{value.show.name}</p>\n                      <p id=\"date\" accessKey={value.show.id}>\n                        premiered on {dateFormat(value.show.premiered, \"mmmm dd, yyyy\")}\n                      </p>\n                      <p accessKey={value.show.id}>Rating: {value.show.rating.average}</p>\n                    </div>\n                  </button>\n                </li>\n              )\n            })}\n          </div>\n        )}\n      </div>\n      {show !== \"\" ?\n        <div className=\"clear-button\">\n          <button\n            onClick={() => setShow(\"\")}\n          >Clear</button>\n        </div>\n        :\n        <div></div>\n      }\n      {show !== \"\" ? \n        <div>\n          <div className=\"show-description\">\n                <h3 className=\"show-description__title\">\n                  {showTitle}\n                </h3>\n                <p>\n                  {show}\n                </p>\n            </div>\n            <div className=\"season-selector\">\n              <h4>Seasons</h4>\n              <select className=\"season-selector__select\">\n                  <option>Select Season</option>\n                  <option>Season 1</option>\n                  <option>Season 2</option>\n                  <option>Season 3</option>\n              </select>\n          </div>      \n          <div className=\"timeline\"></div>\n        </div>\n        :\n        <div id=\"emptyDiv\"></div> \n      }\n      <div className=\"footer\">\n          <h1 id=\"contact\">Contact us</h1>\n          <div className=\"footer__column-container\">\n            <div className=\"footer__column\">\n              <div className=\"footer__column-title\">\n                <p className=\"footer__column-main\">Address</p>\n                <p className=\"footer__column-secondary\">| Mailing</p>\n              </div>\n              <div>\n                <p className=\"footer__column-third\">Primary Address Line</p>\n                <p className=\"footer__column-fourth\">Secondary Address Line</p>\n                <p className=\"footer__column-fourth\">12345 Postal Code</p>\n              </div>\n            </div>\n            <div className=\"footer__column\">\n              <div className=\"footer__column-title\">\n                <p className=\"footer__column-main\">Address</p>\n                <p className=\"footer__column-secondary\">| Mailing</p>\n              </div>\n              <div>\n                <p className=\"footer__column-third\">Headline</p>\n                <p className=\"footer__column-fourth\">+1 123 456 789</p>\n              </div>\n            </div>\n            <div className=\"footer__column\">\n              <div className=\"footer__column-title\">\n                <p className=\"footer__column-main\">Address</p>\n                <p className=\"footer__column-secondary\">| Mailing</p>\n              </div>\n              <div>\n              <p className=\"footer__column-third\">email@email.com</p>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}